% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/notation.R
\name{infer_notation}
\alias{infer_notation}
\title{Infer the notation(s) for a row or column label}
\usage{
infer_notation(
  x,
  notations = RCLabels::notations_list,
  allow_multiple = FALSE,
  retain_names = FALSE,
  choose_most_specific = FALSE
)
}
\arguments{
\item{x}{A row or column label (or vector of labels).}

\item{notations}{The notations from which matches can be discerned.
Default is \code{RCLabels::notations_list}.}

\item{allow_multiple}{A boolean that tells whether multiple notation matches
are allowed.
If \code{FALSE} (the default), multiple matches give an error.}

\item{retain_names}{A boolean that tells whether to retain names on the
outgoing matches.
Default is \code{FALSE}.
If \code{TRUE}, the return value is a named list.
If only one of \code{notations} is returned,
names are never supplied.}

\item{choose_most_specific}{A boolean that indicates if the most-specific notation
will be returned when more than one of \code{notations} matches \code{x}.
Default is \code{FALSE}.
When \code{choose_most_specific = TRUE},
the values of \code{allow_multiple} and \code{retain_names} no longer matter.
At most one of the \code{notations} will be returned without names.}
}
\value{
A single notation object (if \code{x} is a single row or column label)
or a vector of notation objects (if \code{x} is a vector).
If no \code{notations} match \code{x}, \code{NULL} is returned,
either alone or in a list.
}
\description{
It is convenient to know which notation is applicable to a row or column label.
This function infers which \code{notations} are appropriate for \code{x}.
}
\details{
By default (\code{allow_multiple = FALSE}),
a single notation object is returned if only one notation in \code{notations}
is appropriate for \code{x}.
If \code{allow_multiple = FALSE} and more than one \code{notation} is applicable to \code{x},
an error is thrown.
Multiple matches can be returned if \code{allow_multiple} is set \code{TRUE}.

\code{x} can be a vector, in which case the output is also a vector of notations.
}
